# This is the OpenAPI specification for your service. It is used to generate the client code.
# To generate the server code, use the Gradle task `openApiGenerate`. The 
# generated code will be placed in `build/generate-resources/main`.
#
# We will evaluate you based on how well you design your API.
# 1. How well it follows REST principles.
# 2. How easy it is to understand and use.
#
# References
# 1. https://swagger.io/specification/
openapi: "3.0.0"
info:
  version: 1.0.0
  title: User Service
  license:
    name: MIT
servers:
  - url: http://localhost
paths:
  /register:
    post:
      summary: This is an endpoint for user registration
      operationId: register
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/UserRegistrationRequest"
            examples:
              standard-input:
                description: this is the correct way of the user input the user registration form
                value: { "phone_number": "+6288888888888", "name":"fulan fulanah", "password":"some-secrets" }
      responses:
        '200':
          description: registration succeed
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/UserRegistrationResponse"
              examples:
                success:
                  description: this is the success response after user being registered
                  value: { "user_id": 1 }
        '400':
          description: registration failed
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/MessageResponse"
              examples:
                invalid-1:
                  description: this is the response when user input the phone number below 10 character or exceeding 13 char.
                  value: {"message": "Phone numbers must be at minimum 10 characters and maximum 13 characters, your phone number are xx characters."}
                invalid-2:
                  description: this is the response when user input the phone number below 10 character or exceeding 13 char and not started with +62.
                  value: {"message": "Phone numbers must be at minimum 10 characters and maximum 13 characters, your phone number are xx characters. Phone numbers must be starts with +62."}
        '500':
          description: registration failed - internal server error
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/MessageResponse"
  /login:
    post:
      summary: This is an endpoint for user login
      operationId: login
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/UserLoginRequest"
      responses:
        '200':
          description: login succeed
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/JWTTokens"
        '400':
          description: login failed
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/MessageResponse"
        '500':
          description: login failed - internal server error
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/MessageResponse"
  /profile:
    get:
      summary: This is an endpoint to get user profile
      operationId: getProfile
      security:
        - bearerAuth: []
      responses:
        '200':
          description: get profile succeed
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/UserProfilePresenter"
        '400':
          description: get profile failed
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/MessageResponse"
        '403':
          description: token invalid
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/MessageResponse"
        '500':
          description: get profile failed - internal server error
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/MessageResponse"
    patch:
      summary: This is an endpoint for update user profile
      operationId: patchProfile
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/UserProfilePresenter"
      responses:
        '200':
          description: login succeed
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/JWTTokens"
        '400':
          description: login failed
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/MessageResponse"
        '403':
          description: token invalid
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/MessageResponse"
        '409':
          description: update conflict
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/MessageResponse"
        '500':
          description: login failed - internal server error
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/MessageResponse"
components:
  schemas:
    UserRegistrationRequest:
      type: object
      required: 
        - phone_number
        - password
        - name
      properties:
        phone_number:
          description: the phone number of the user
          type: string
        password:
          description: the password of the user
          type: string
        name:
          description: the full name of the user
          type: string
    UserRegistrationResponse:
      type: object
      properties:
        user_id:
          description: this is the returned id of the user after registration
          type: number
    UserLoginRequest:
      type: object
      required: 
        - phone_number
        - password
      properties:
        phone_number:
          description: a phone number of the user
          type: string
        password:
          description: password of the user
          type: string
    MessageResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    JWTTokens:
      type: object
      properties:
        access_token:
          description: this token is to access server's resources
          type: string
        refresh_token:
          description: this token is to regain your access token
          type: string
    UserProfilePresenter:
      type: object
      properties:
        phone_number:
          description: this is users phone number
          type: string
        name:
          description: this users full name
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT